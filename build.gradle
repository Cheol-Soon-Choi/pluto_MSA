buildscript {
    ext {
        springBootVersion = '2.3.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.ccs'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '8'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    jar {
        enabled = false
    }

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR12")
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        implementation('org.projectlombok:lombok')
        annotationProcessor('org.projectlombok:lombok')
        testImplementation('org.projectlombok:lombok')
        testAnnotationProcessor('org.projectlombok:lombok')

        implementation 'org.postgresql:postgresql:42.3.3'
        runtimeOnly group: 'com.h2database', name: 'h2', version: '1.4.199'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.springframework.boot:spring-boot-starter-actuator:2.3.2.RELEASE'

        implementation 'org.springframework.boot:spring-boot-starter-validation'

        implementation 'com.querydsl:querydsl-jpa'
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    }

    test {
        useJUnitPlatform()
    }
}
project(':common-module') {
    dependencies {

    }
}
project(':EurekaServer') {
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:2.2.5.RELEASE'
    }
}

project(':ConfigServer') {
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-config-server'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    }
}

project(':MemberServer') {
    dependencies {
        implementation project(':common-module')
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.2.5.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-config-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'org.springframework.security:spring-security-rsa'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.5.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-security:2.0.0.RELEASE'
        implementation 'org.springframework.security:spring-security-jwt:1.0.9.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-stream:3.0.8.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka:3.0.8.RELEASE'
    }
}

project(':ItemServer') {
    dependencies {
        implementation project(':common-module')
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.2.5.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-config-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'org.springframework.security:spring-security-rsa'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.5.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-security:2.0.0.RELEASE'
        implementation 'org.springframework.security:spring-security-jwt:1.0.9.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-stream:3.0.8.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka:3.0.8.RELEASE'
    }
}

project(':OrderServer') {
    dependencies {
        implementation project(':common-module')
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.2.5.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-config-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'org.springframework.security:spring-security-rsa'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.5.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-security:2.0.0.RELEASE'
        implementation 'org.springframework.security:spring-security-jwt:1.0.9.RELEASE'
    }
}

project(':ZuulServer') {
    dependencies {
        implementation project(':common-module')
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-zuul:2.2.5.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.2.5.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-config-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.5.RELEASE'
    }
}

project(':AuthServer') {
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.2.5.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-config-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'org.springframework.cloud:spring-cloud-security:2.0.0.RELEASE'
        implementation 'org.springframework.security:spring-security-jwt:1.0.9.RELEASE'
    }
}